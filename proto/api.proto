syntax = "proto3";
package api;

service ApiV1 {
  // club
  rpc ListClubs (ListClubsRequest) returns (ListClubsResponse);
  rpc NewClub (NewClubRequest) returns (NewClubResponse);
  rpc SetClubLogo (SetClubLogoRequest) returns (SetClubLogoResponse);
  rpc AddStaffMemberToClub(AddStaffMemberToClubRequest) returns (AddStaffMemberToClubResponse);
  rpc RemoveStaffMemberFromClub(RemoveStaffMemberFromClubRequest) returns (RemoveStaffMemberFromClubResponse);

  // team
  rpc ListTeams (ListTeamsRequest) returns (ListTeamsResponse);
  rpc NewTeam (NewTeamRequest) returns (NewTeamResponse);
  rpc AddStaffMemberToTeam(AddStaffMemberToTeamRequest) returns (AddStaffMemberToTeamResponse);
  rpc RemoveStaffMemberFromTeam(RemoveStaffMemberFromTeamRequest) returns (RemoveStaffMemberFromTeamResponse);

  // community
  rpc ListCommunities (ListCommunitiesRequest) returns (ListCommunitiesResponse);
  rpc NewCommunity (NewCommunityRequest) returns (NewCommunityResponse);
  rpc SetCommunityLogo(SetCommunityLogoRequest) returns (SetCommunityLogoResponse);
  rpc PromoteCommunityMemberToEditor(PromoteCommunityMemberToEditorRequest) returns (PromoteCommunityMemberToEditorResponse);
  rpc DemoteCommunityEditor(DemoteCommunityEditorRequest) returns (DemoteCommunityEditorResponse);
  rpc JoinCommunity(JoinCommunityRequest) returns (JoinCommunityResponse);
  rpc LeaveCommunity(LeaveCommunityRequest) returns (LeaveCommunityResponse);

  // post
  rpc PublishPost(PublishPostRequest) returns (PublishPostResponse);
  rpc RemovePost(RemovePostRequest) returns (RemovePostResponse);

  // post reaction
  rpc ReactToPost(ReactToPostRequest) returns (ReactToPostResponse);
  rpc RetractPostReaction(RetractPostReactionRequest) returns (RetractPostReactionResponse);

  // comment
  rpc ListComments(ListCommentsRequest) returns (ListCommentsResponse);
  rpc PublishComment(PublishCommentRequest) returns (PublishCommentResponse);
  rpc RemoveComment(RemoveCommentRequest) returns (RemoveCommentResponse);

  // feed
  rpc ListFeed(ListFeedRequest) returns (ListFeedResponse);
}

// request & response
message ListClubsRequest {
  string after = 1;
}

message ListClubsResponse {
  repeated Club clubs = 1;
  // repeated User users = 2;
}

message NewClubRequest {
  string name = 1;
}

message NewClubResponse {
  string id = 1;
}

message SetClubLogoRequest {
  string club_id = 1;
  string logo_id = 2;
}

message SetClubLogoResponse {
}

message AddStaffMemberToClubRequest {
  string club_id = 1;
  string person_id = 2;
}

message AddStaffMemberToClubResponse {
}

message RemoveStaffMemberFromClubRequest {
  string club_id = 1;
  string staff_member_id = 2;
}

message RemoveStaffMemberFromClubResponse {
}

message ListTeamsRequest {
  string after = 1;
}

message ListTeamsResponse {
  repeated Team teams = 1;
  // repeated User users = 2;
}

message NewTeamRequest {
  string name = 1;
  string club_id = 2;
}

message NewTeamResponse {
  string id = 1;
}

message AddStaffMemberToTeamRequest {
  string team_id = 1;
  string person_id = 2;
}

message AddStaffMemberToTeamResponse {
}

message RemoveStaffMemberFromTeamRequest {
  string team_id = 1;
  string staff_member_id = 2;
}

message RemoveStaffMemberFromTeamResponse {
}

message ListCommunitiesRequest {
  string after = 1;
  oneof context {
    string club_id = 2;
    string team_id = 3;
  }
}

message ListCommunitiesResponse {
  repeated Community communities = 1;
}

message NewCommunityRequest {
  string name = 1;
  oneof context {
    string club_id = 2;
    string team_id = 3;
  }
}

message NewCommunityResponse {
  string id = 1;
}

message SetCommunityLogoRequest {
  string community_id = 1;
  string logo_id = 2;
}

message SetCommunityLogoResponse {

}

message PromoteCommunityMemberToEditorRequest {
  string community_id = 1;
  string member_id = 2;
}

message PromoteCommunityMemberToEditorResponse {

}

message DemoteCommunityEditorRequest {
  string community_id = 1;
  string editor_id = 2;
}

message DemoteCommunityEditorResponse {

}

message JoinCommunityRequest {
  string community_id = 1;
}

message JoinCommunityResponse {

}

message LeaveCommunityRequest {
  string community_id = 1;
}

message LeaveCommunityResponse {

}

message PublishPostRequest {
  message Attachment {
    oneof media {
      string image_id = 1;
    }
  }

  string community_id = 1;
  string text = 2;
  repeated Attachment attachments = 3;
}

message PublishPostResponse {
  string id = 1;
}

message RemovePostRequest {
  string post_id = 1;
}

message RemovePostResponse {

}

message PublishCommentRequest {
  string reply_to_id = 1;
  string text = 2;
}

message PublishCommentResponse {
  string id = 1;
}

message RemoveCommentRequest {
  string comment_id = 1;
}

message RemoveCommentResponse {

}

message ReactToPostRequest {
  string post_id = 1;
  Emotion emotion = 2;
}

message ReactToPostResponse {

}

message RetractPostReactionRequest {
  string post_id = 1;
  Emotion emotion = 2;
}

message RetractPostReactionResponse {

}

message ListFeedRequest {
  oneof feed {
    Unit memberships = 1;
    string community_id = 2;
  }
  string after = 3;
}

message ListFeedResponse {
  message Reactions {
    uint64 love = 1;
    uint64 funny = 2;
    uint64 celebrate = 3;
    uint64 support = 4;
    uint64 insightful = 5;
  }

  message FeedListing {
    Post post = 1;
    Reactions reactions = 2;
    uint64 comments = 3;
  }

  repeated FeedListing listings = 1;
}

message ListCommentsRequest {
  string reply_to_id = 1;
  string after = 2;
}

message ListCommentsResponse {
  repeated Comment comments = 1;
}

// entities
message Club {
  string id = 1;
  string name = 2;
  string logo_id = 3;
  repeated string staff_ids = 4;
}

message Team {
  string id = 1;
  string name = 2;
  string club_id = 3;
  repeated string staff_ids = 4;
}

message Community {
  string id = 1;
  string name = 2;
  oneof context {
    string club_id = 3;
    string team_id = 4;
  }
  string founded = 5;
  string logo_id = 6;
  string editor_ids = 7;
  uint64 member_count = 8;
}

message Post {
  string id = 1;
  string community_id = 2;
  string text = 3;
  repeated PostAttachment attachments = 4;
  string author_id = 5;
  uint64 published = 6;
}

message PostAttachment {
  oneof type {
    string image_id = 1;
  }
}

message Comment {
  string id = 1;
  string text = 2;
  string author_id = 3;
  uint64 published = 4;
}

message User {
  string id = 1;
}

message Unit {

}

enum Emotion {
  LOVE = 0;
  FUNNY = 1;
  CELEBRATE = 2;
  SUPPORT = 3;
  INSIGHTFUL = 4;
}

